#
# A HTTP request is point-to-point. What if we wish to convert the
# one-to-one messaging paradigm into a one-to-many; i.e. broadcast?
#
# This example illustrates how to broadcast a HTTP requests to
#  - other HTTP endpoints
#  - a web socket server
#  - to an email account
#  - to the file system (maybe for integration with a legacy app)
#
# To run:
# 1. Overwrite config/application.conf with this file.
#
# 2. Create directory /tmp/http-broadcast-to-file
#
# 3. Update this configuration with your specific web server and email account details
#    a) task #1 uri
#    b) task #3 from, to, uri
#
#    If you do not have valid settings for the above, processing will be slowed down as
#    Plebify will retry 3 times.  For this example, it is best to DELETE the task if you
#    do not have valid settings for it.
#
# 4. Execute plebify/bin/start from a terminal window
#
# 5. Open a web socket client by opening http-broadcast-to-websocket.html (located in
#    this directory) in your browser.
#
# 6. Send a HTTP POST request to http://localhost:8877/in
#    curl -H "Content-Type: text/plain" -d "Butter is better" http://localhost:8877/in
#
# 7. Check that "Butter is better" is:
#    a) posted to your web server
#    b) in the web socket client browser opened in step 5
#    c) as an email to your email account
#    d) in the /tmp/http-broadcast-to-file folder
#

plebify {
  connectors = [{
      connector-id = "http"
      factory-class-name = "org.mashupbots.plebify.http.HttpConnectorFactory"
      websocket-server-1 = "websocket://localhost:9999/out"
    }, {
      connector-id = "file"
      factory-class-name = "org.mashupbots.plebify.file.FileConnectorFactory"
    }, {
      connector-id = "mail"
      factory-class-name = "org.mashupbots.plebify.mail.MailConnectorFactory"
    }]
  jobs = [{
      job-id = "broadcast"
      on = [{
          connector-id = "http"
          connector-event = "request-received"
          uri = "jetty:http://localhost:8877/in"
        }]
      do = [{
          connector-id = "http"
          connector-task = "send-request"
          uri = "jetty:http://www.mywebserver.com/"
          method = "POST"
          on-fail = "next"
        },{
          connector-id = "http"
          connector-task = "send-frame"
          websocket-server = websocket-server-1
          on-fail = "next"
        },{
          connector-id = "mail"
          connector-task = "send"
          from = "user@gmail.com"
          to = "user@gmail.com"
          subject = "HTTP Broadcast to email"
          uri = "smtps://smtp.gmail.com:465?username=user@gmail.com&password=secret"
          on-fail = "next"
        },{
          connector-id = "file"
          connector-task = "save"
          uri = "file:/tmp/http-broadcast-to-file"
          on-fail = "next"
        }]
    }]
}
  
akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "INFO"
}  
