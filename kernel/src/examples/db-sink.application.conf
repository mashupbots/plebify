#
# In this example, we pickup data from a web server, file system and 
# email server, and write it into a database.
#
# To run:
# 1. Overwrite config/application.conf with this file.
#
# 2. Create directory /tmp/db-sink
#
# 3. Create a database table with the following SQL
#      CREATE TABLE db_sink (
#           pk INT NOT NULL AUTO_INCREMENT,
#           logged_on DATETIME NOT NULL,
#           data VARCHAR(4000) NOT NULL,
#           PRIMARY KEY (pk) )
#
# 4. Update this configuration with your specific database and email account details
#    a) db connector JDBC datasource driver, url, user and password. To install your
#       JDBC driver, copy the JAR into plebify/lib directry.
#    b) task #1 insert SQL statement may have to be adjusted for your database
#    c) event #3 email uri
#
# 5. Execute plebify/bin/start from a terminal window
#
# 6. Create a text file containing "Butter is better" and copy it into 
#    /tmp/db-sink
#
# 7. Send a HTTP POST request to http://localhost:8877/in
#    curl -H "Content-Type: text/plain" -d "Beer is best" http://localhost:8877/in
#
# 8. Send a text email (HTML and attachments not suppored as yet) to your nominated 
#    email account.
#
# 9. Check that all your data arrived in the database table. Run the following SQL
#    in your database: 
#      select * from db-sink
#
#    Note that you may have to wait a minute or two for the email poller to pick
#    up the email you sent.
#

plebify {
  connectors = [{
      connector-id = "http"
      factory-class-name = "org.mashupbots.plebify.http.HttpConnectorFactory"
    }, {
      connector-id = "file"
      factory-class-name = "org.mashupbots.plebify.file.FileConnectorFactory"
    }, {
      connector-id = "mail"
      factory-class-name = "org.mashupbots.plebify.mail.MailConnectorFactory"
    },{
      connector-id = "db"
      factory-class-name = "org.mashupbots.plebify.db.DbConnectorFactory"
      ds1-datasource-driver = "com.mysql.jdbc.Driver"
      ds1-datasource-url = "jdbc:mysql://127.0.0.1:3306/test"
      ds1-datasource-user = "user"
      ds1-datasource-password = "secret"
    }]
  jobs = [{
      job-id = "move-files"
      on = [{
          connector-id = "http"
          connector-event = "request-received"
          uri = "jetty:http://localhost:8877/in"
        },{
          connector-id = "file"
          connector-event = "created"
          uri = "file:/tmp/db-sink?delete=true"
        },{
          connector-id = "mail"
          connector-event = "received"
          uri = "imaps://imap.gmail.com:993?username=user@gmail.com&password=secret"
        }]
      do = [{
          connector-id = "db"
          connector-task = "execute"
          datasource = "ds1"
          sql = "insert into db_sink (logged_on, data) values (now(), '{{Content}}') "
        }]
    }]
}
  
akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "INFO"
}  
